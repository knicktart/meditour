import 'package:flutter/material.dart';import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:jitsi_meet_flutter_sdk/jitsi_meet_flutter_sdk.dart';import '../../repositories/booking_repository.dart';import '../../models/booking.dart';
class ConsultPage extends ConsumerStatefulWidget{const ConsultPage({super.key});@override ConsumerState<ConsultPage> createState()=>_S();}
class _S extends ConsumerState<ConsultPage>{final _price=TextEditingController(text:'50');DateTime? _d;TimeOfDay? _t;Booking? _b;bool _loading=false;final _j=JitsiMeet();
 bool get _canJoin{if(_b==null)return false;final now=DateTime.now();final s=_b!.scheduledAt;return now.isAfter(s.subtract(const Duration(minutes:10)))&&now.isBefore(s.add(const Duration(minutes:50)));}
 Future<void> _book() async{if(_d==null||_t==null){ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content:Text('Pick date & time')));return;}setState(()=>_loading=true);try{final dt=DateTime(_d!.year,_d!.month,_d!.day,_t!.hour,_t!.minute);final r=ref.read(bookingRepositoryProvider);final b=await r.bookConsult(at:dt,price:double.parse(_price.text));setState(()=>_b=b);ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content:Text('Booked!')));}catch(e){ScaffoldMessenger.of(context).showSnackBar(SnackBar(content:Text('Error: $e')));}finally{if(mounted)setState(()=>_loading=false);}}
 Future<void> _join() async{if(_b?.room==null)return;await _j.join(JitsiMeetConferenceOptions(room:_b!.room!,configOverrides:{"startWithAudioMuted":true,"startWithVideoMuted":true},featureFlags:{"welcomepage.enabled":false}));}
 @override Widget build(BuildContext c){return Scaffold(appBar:AppBar(title:const Text('Pre-travel Consultation')),drawer:Drawer(child:ListView(children:[const DrawerHeader(child:Text('MediTour')),ListTile(leading:const Icon(Icons.home),title:const Text('Home'),onTap:()=>Navigator.pushReplacementNamed(c,'/home'))])),body:Padding(padding:const EdgeInsets.all(16),child:Column(crossAxisAlignment:CrossAxisAlignment.start,children:[Row(children:[Expanded(child:OutlinedButton(onPressed:() async{final d=await showDatePicker(context:c,firstDate:DateTime.now(),lastDate:DateTime.now().add(const Duration(days:120)),initialDate:DateTime.now().add(const Duration(days:1)));if(d!=null)setState(()=>_d=d);},child:Text(_d==null?'Pick date':_d!.toIso8601String().split('T').first))),const SizedBox(width:8),Expanded(child:OutlinedButton(onPressed:() async{final t=await showTimePicker(context:c,initialTime:const TimeOfDay(hour:10,minute:0));if(t!=null)setState(()=>_t=t);},child:Text(_t==null?'Pick time':_t!.format(c))))]),const SizedBox(height:12),TextField(controller:_price,decoration:const InputDecoration(labelText:'Consultation Fee (USD)')),const SizedBox(height:12),Row(children:[FilledButton.icon(onPressed:_loading?null:_book,icon:const Icon(Icons.check),label:Text(_loading?'...':'Book Call')),const SizedBox(width:12),FilledButton.icon(onPressed:_canJoin?_join:null,icon:const Icon(Icons.video_call),label:const Text('Join Call')),]),const SizedBox(height:16),if(_b!=null)Text('Booked #${_b!.id} for ${_b!.scheduledAt.toLocal()} â€” room: ${_b!.room}'),])));}
}
